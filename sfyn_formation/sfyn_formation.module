<?php

/**
 * Imp of hook_menu
 */
function sfyn_formation_menu () {
  $items = array();

  $items['formation'] = array(
    'title' => 'Formation PHP et Drupal 6',
    'description' => 'Formation PHP et Drupal 6',
    'page callback' => 'sfyn_formation_page_content',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['formation/sfyn'] = array(
    'title' => "Sofian",
    'description' => 'Ma formation',
    'page callback' => 'sfyn_formation_page_content',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Callback for my page
 */
function sfyn_formation_page_content () {
  $output = 'Pour voir le plan de cour, ' . l('allez sur le wiki de koumbit', 'https://wiki.koumbit.net/FormationsExternes/PHPEtDrupal6');

  // $output .= sfyn_formation_get_data(); 
  $output .= drupal_get_form('sfyn_formation_blabla');

  return $output;
}

/**
 * Get some data from the database
 */
function sfyn_formation_get_data() {
  global $user;

  // Get the mysql result we are interested in
  $result = db_query('SELECT name, uid FROM users');

  // Initialize a variable to contain our formatted return value
  $output = '<ul>';

  $check_this = TRUE;
  if ($check_this) {

    // Iterate through our results and format the output as list items
    while ($row = db_fetch_array($result)) {
      $output .= "<li>{$row['name']} :: {$row['uid']}</li>";
    }
  }

  // Close the list
  $output .= '</ul>';

  // Get the name of the current user
  $result = db_query('SELECT name FROM users WHERE uid = %d', $user->uid);
  $output .= '<h3>You are ' . db_result($result) . '</h3>';

  return $output;
}


/**
 * A form!
 */
function sfyn_formation_blabla ($form_state) {
  
  $form = array();

  $form['passion'] = array(
    '#type' => 'select', 
    '#title' => t('What is your passion?'), 
    '#default_value' => 'bouffe',
    '#options' => _sfyn_formation_passion_options(), 
    '#required' => FALSE,
    '#multiple' => TRUE,
  );  

  $form['passion']['#options']['poison3'] = t('Drugs');

  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Submit')
  );

  return $form;
}

/**
 * Validation function for blabla form
 */
function sfyn_formation_blabla_validate ($form, &$form_state) {
  $allowed_options = $form['passion']['#options'];
  $noselect = 0;
  foreach ($form_state['values']['passion'] as $choice) {
    if (!array_key_exists($choice, $allowed_options)) {
      form_set_error('passion', t('Your passion is illegal.'));
    }
    if ($choice == 'vide') {
      $noselect++;
    }
    else {
      $noselect--;
    }
  }
  if ($noselect > 0) {
    form_set_error('passion', t('You must select a passion.'));
  }
}

/**
 * Submission function for blabla form
 */
function sfyn_formation_blabla_submit ($form, &$form_state) {
  global $user;

  $options = $form['passion']['#options'];

  // Generate the content for the node
  $content = '<ul>';
  foreach ($form_state['values']['passion'] as $choice) {
    $content .= '<li>' . $options[$choice] . '</li>';
  }
  $content .= '</ul>';
  $title = "The passions of {$user->name}";

  // Load up an existing node if necessary
  $node = node_load(array('title' => $title));
  if (!$node->nid) { // means no node was loaded so start a new one
    $node = new stdClass();
  }

  // Construct the node object
  $node->title = $title;
  $node->uid = $user->uid;
  $node->name = $user->name;
  $node->teaser = $content;
  $node->body = $node->body . $content;
  $node->type = 'story';
  $node->status = 1;
  $node->promote = 1;

  // Save it
  node_save($node);

  // Load the new node (if necessary) and redirect to it
  if (!$node->nid) {
    $node = node_load(array('title' => $title));
  }
  drupal_set_message(t('Your passions have been noted. !link', array(
    '!link' => l(t('See them here'), "node/{$node->nid}"),
  )));
  drupal_goto(url('node/' . $node->nid));
  
}

/**
 * Passion options helper function for the blabla form
 */
function _sfyn_formation_passion_options () {
  return array(
    'vide' => '',
    'bouffe' => t('Food'),
    'poison2' => t('Alcohol'),
    'saveme' => t('Helping others'),
  );
}

/**
 * example of form_alter for the blabla form
 *//*
function exemple_formation_form_sfyn_formation_blabla_alter (&$form, &$form_state) {
  $form['passion']['#options']['monoption'] = 'Moi!';
  $form['#validate'] = array('misery_do_nothing');
  $form['#submit'] = array('misery_do_nothing');
}
*/
